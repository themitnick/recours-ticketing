name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Permet dÃ©clenchement manuel

# Permissions nÃ©cessaires pour crÃ©er la branche gh-pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # NÃ©cessaire pour crÃ©er la branche gh-pages
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.12'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build:github-pages
      
    - name: Copy index.html to 404.html for SPA routing
      run: cp dist/recours-ticketing/browser/index.html dist/recours-ticketing/browser/404.html
      
    - name: Add .nojekyll file
      run: touch dist/recours-ticketing/browser/.nojekyll
      
    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
    - name: Deploy to gh-pages branch (manual method)
      run: |
        echo "ðŸš€ Deploying to gh-pages branch..."
        
        # CrÃ©er un rÃ©pertoire temporaire
        mkdir -p temp-gh-pages
        cp -r dist/recours-ticketing/browser/* temp-gh-pages/
        cp dist/recours-ticketing/browser/.nojekyll temp-gh-pages/ 2>/dev/null || true
        
        # Sauvegarder la branche actuelle
        CURRENT_BRANCH=$(git branch --show-current)
        
        # VÃ©rifier si gh-pages existe
        if git ls-remote --heads origin gh-pages | grep -q gh-pages; then
          echo "âœ… gh-pages branch exists, updating..."
          git fetch origin gh-pages
          git checkout gh-pages
          # Nettoyer le contenu actuel (sauf .git)
          find . -maxdepth 1 ! -name '.git' ! -name '.' ! -name '..' -exec rm -rf {} +
        else
          echo "ðŸ†• Creating new gh-pages branch..."
          git checkout --orphan gh-pages
          git rm -rf . 2>/dev/null || true
        fi
        
        # Copier les nouveaux fichiers
        cp -r temp-gh-pages/* .
        cp temp-gh-pages/.nojekyll . 2>/dev/null || true
        
        # Nettoyer le rÃ©pertoire temporaire
        rm -rf temp-gh-pages
        
        # Ajouter et committer
        git add .
        git commit -m "Deploy to GitHub Pages - $(date -u)"
        
        # Push
        git push origin gh-pages
        
        echo "âœ… Successfully deployed to gh-pages!"
        
        # Retourner Ã  la branche originale
        git checkout $CURRENT_BRANCH
